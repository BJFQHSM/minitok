basePath: /api/v1
definitions:
  biz.Comment:
    properties:
      content:
        type: string
      create_date:
        type: string
      id:
        type: integer
      user:
        $ref: '#/definitions/biz.User'
    type: object
  biz.CommentActionResponse:
    properties:
      status_code:
        type: integer
      status_msg:
        type: string
    type: object
  biz.FavoriteActionResponse:
    properties:
      status_code:
        type: integer
      status_msg:
        type: string
    type: object
  biz.FeedResponse:
    properties:
      next_time:
        type: integer
      status_code:
        type: integer
      status_msg:
        type: string
      video:
        items:
          $ref: '#/definitions/biz.Video'
        type: array
    type: object
  biz.PublishActionResponse:
    properties:
      status_code:
        type: integer
      status_msg:
        type: string
    type: object
  biz.QueryCommentListResponse:
    properties:
      comment_list:
        items:
          $ref: '#/definitions/biz.Comment'
        type: array
      status_code:
        type: integer
      status_msg:
        type: string
    type: object
  biz.QueryFavoriteListResponse:
    properties:
      status_code:
        type: integer
      status_msg:
        type: string
      video_list:
        items:
          $ref: '#/definitions/biz.Video'
        type: array
    type: object
  biz.QueryFollowListResponse:
    properties:
      status_code:
        type: integer
      status_msg:
        type: string
      user_list:
        items:
          $ref: '#/definitions/biz.User'
        type: array
    type: object
  biz.QueryFollowerListResponse:
    properties:
      status_code:
        type: integer
      status_msg:
        type: string
      user_list:
        items:
          $ref: '#/definitions/biz.User'
        type: array
    type: object
  biz.QueryInfoResponse:
    properties:
      status_code:
        type: integer
      status_msg:
        type: string
      user:
        $ref: '#/definitions/biz.User'
    type: object
  biz.QueryPublishListResponse:
    properties:
      status_code:
        type: integer
      status_msg:
        type: string
      video_list:
        items:
          $ref: '#/definitions/biz.Video'
        type: array
    type: object
  biz.RelationActionResponse:
    properties:
      status_code:
        type: integer
      status_msg:
        type: string
    type: object
  biz.User:
    properties:
      follow_count:
        type: integer
      follower_count:
        type: integer
      id:
        type: integer
      is_follow:
        type: boolean
      name:
        type: string
    type: object
  biz.Video:
    properties:
      author:
        $ref: '#/definitions/biz.User'
      comment_count:
        type: integer
      cover_url:
        type: string
      favorite_count:
        type: integer
      id:
        type: integer
      is_favorite:
        type: boolean
      play_url:
        type: string
    type: object
  user.LoginResponse:
    properties:
      status_code:
        type: integer
      status_msg:
        type: string
      token:
        type: string
      user_id:
        type: integer
    type: object
  user.RegisterResponse:
    properties:
      status_code:
        type: integer
      status_msg:
        type: string
      token:
        type: string
      user_id:
        type: integer
    type: object
host: localhost:8080
info:
  contact: {}
  license:
    name: Apache 2.0
    url: http://www.apache.org/licenses/LICENSE-2.0.html
  title: Swagger API
  version: "1.0"
paths:
  /comment/action:
    post:
      consumes:
      - application/json
      description: put comment
      parameters:
      - description: user_id
        in: body
        name: user_id
        required: true
        schema:
          type: integer
      - description: token
        in: body
        name: token
        required: true
        schema:
          type: string
      - description: video_id
        in: body
        name: video_id
        required: true
        schema:
          type: integer
      - description: 1 - comment 2 - delete
        in: body
        name: action_type
        required: true
        schema:
          type: integer
      - description: needed when action_type=1
        in: body
        name: comment_text
        schema:
          type: string
      - description: needed when action_type=2
        in: body
        name: comment_id
        schema:
          type: integer
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/biz.CommentActionResponse'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/biz.CommentActionResponse'
      summary: comment a video
      tags:
      - comment
  /comment/list:
    get:
      consumes:
      - application/json
      description: get comment list by video id
      parameters:
      - description: user_id
        in: body
        name: user_id
        required: true
        schema:
          type: integer
      - description: token
        in: body
        name: token
        required: true
        schema:
          type: string
      - description: video_id
        in: body
        name: video_id
        required: true
        schema:
          type: integer
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/biz.QueryCommentListResponse'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/biz.QueryCommentListResponse'
      summary: get comment list
      tags:
      - comment
  /favorite/action:
    post:
      consumes:
      - application/json
      parameters:
      - description: user_id
        in: body
        name: user_id
        required: true
        schema:
          type: integer
      - description: token
        in: body
        name: token
        required: true
        schema:
          type: string
      - description: video_id
        in: body
        name: video_id
        required: true
        schema:
          type: integer
      - description: 1 - like 2 - unlike
        in: body
        name: action_type
        required: true
        schema:
          type: integer
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/biz.FavoriteActionResponse'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/biz.FavoriteActionResponse'
      summary: like video action
      tags:
      - favorite
  /favorite/list:
    get:
      consumes:
      - application/json
      description: get favorite list by userId
      parameters:
      - description: user_id
        in: body
        name: user_id
        required: true
        schema:
          type: integer
      - description: token
        in: body
        name: token
        required: true
        schema:
          type: string
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/biz.QueryFavoriteListResponse'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/biz.QueryFavoriteListResponse'
      summary: get favorite list
      tags:
      - favorite
  /feed:
    get:
      consumes:
      - application/json
      description: get feed
      parameters:
      - description: the latest time to get
        in: body
        name: latest_time
        schema:
          type: integer
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/biz.FeedResponse'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/biz.FeedResponse'
      summary: get feed
      tags:
      - feed
  /publish/action:
    post:
      consumes:
      - application/json
      description: publish video
      parameters:
      - description: user_id
        in: body
        name: user_id
        required: true
        schema:
          type: integer
      - description: token
        in: body
        name: token
        required: true
        schema:
          type: string
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/biz.PublishActionResponse'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/biz.PublishActionResponse'
      summary: publish video
      tags:
      - publish
  /publish/list:
    get:
      consumes:
      - application/json
      description: get publish video by userId
      parameters:
      - description: user_id
        in: body
        name: user_id
        required: true
        schema:
          type: integer
      - description: token
        in: body
        name: token
        required: true
        schema:
          type: string
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/biz.QueryPublishListResponse'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/biz.QueryPublishListResponse'
      summary: get publish list
      tags:
      - publish
  /relation/action:
    post:
      consumes:
      - application/json
      description: follow and unfollow
      parameters:
      - description: user_id
        in: body
        name: user_id
        required: true
        schema:
          type: integer
      - description: token
        in: body
        name: token
        required: true
        schema:
          type: string
      - description: to_user_id
        in: body
        name: to_user_id
        required: true
        schema:
          type: integer
      - description: 1 - follow 2 - unfollow
        in: body
        name: action_type
        required: true
        schema:
          type: integer
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/biz.RelationActionResponse'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/biz.RelationActionResponse'
      summary: follow and unfollow
      tags:
      - relation
  /relation/follow/list:
    get:
      consumes:
      - application/json
      description: get follow list by userId
      parameters:
      - description: user_id
        in: body
        name: user_id
        required: true
        schema:
          type: integer
      - description: token
        in: body
        name: token
        required: true
        schema:
          type: string
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/biz.QueryFollowListResponse'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/biz.QueryFollowListResponse'
      summary: get follow list
      tags:
      - relation
  /relation/follower/list:
    get:
      consumes:
      - application/json
      description: get follower list by userId
      parameters:
      - description: user_id
        in: body
        name: user_id
        required: true
        schema:
          type: integer
      - description: token
        in: body
        name: token
        required: true
        schema:
          type: string
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/biz.QueryFollowerListResponse'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/biz.QueryFollowerListResponse'
      summary: get follower list
      tags:
      - relation
  /user:
    get:
      consumes:
      - application/json
      description: get user info
      parameters:
      - description: user_id
        in: body
        name: user_id
        required: true
        schema:
          type: integer
      - description: token
        in: body
        name: token
        required: true
        schema:
          type: string
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/biz.QueryInfoResponse'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/biz.QueryInfoResponse'
      summary: get user info
      tags:
      - user
  /user/login:
    post:
      consumes:
      - application/json
      description: login
      parameters:
      - description: username
        in: body
        name: username
        required: true
        schema:
          type: string
      - description: password
        in: body
        name: password
        required: true
        schema:
          type: string
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/user.LoginResponse'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/user.LoginResponse'
      summary: login
      tags:
      - user
  /user/register:
    post:
      consumes:
      - application/json
      description: register
      parameters:
      - description: username
        in: body
        name: username
        required: true
        schema:
          type: string
      - description: password
        in: body
        name: password
        required: true
        schema:
          type: string
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/user.RegisterResponse'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/user.RegisterResponse'
      summary: register
      tags:
      - user
securityDefinitions:
  BasicAuth:
    type: basic
swagger: "2.0"
